{"ast":null,"code":"var _jsxFileName = \"/Users/siriuskl/Documents/Front-End/search/src/Components/MainPage/Gallery.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'block',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingTop: '2%'\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n    width: '100vw',\n    maxHeight: '25vh',\n    [theme.breakpoints.down('sm')]: {\n      maxHeight: '15vh'\n    }\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n}));\n\nconst Gallery = props => {\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    className: classes.gridList,\n    cols: props.cols,\n    cellHeight: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, tileData.map(tile => React.createElement(GridListTile, {\n    key: tile.img,\n    className: classes.items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: tile.img,\n    alt: tile.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })))));\n};\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/siriuskl/Documents/Front-End/search/src/Components/MainPage/Gallery.js"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","tileData","useStyles","theme","root","display","flexWrap","justifyContent","overflow","paddingTop","gridList","transform","width","maxHeight","breakpoints","down","title","color","palette","primary","light","titleBar","background","Gallery","props","classes","cols","map","tile","img","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,OADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,UAAU,EAAE;AALR,GAD+B;AAQrCC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,QAAQ,EAAE,QADF;AAER;AACAK,IAAAA,SAAS,EAAE,eAHH;AAIRC,IAAAA,KAAK,EAAE,OAJC;AAKRC,IAAAA,SAAS,EAAE,MALH;AAMR,KAACV,KAAK,CAACW,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAA+B;AAC7BF,MAAAA,SAAS,EAAE;AADkB;AANvB,GAR2B;AAkBrCG,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEd,KAAK,CAACe,OAAN,CAAcC,OAAd,CAAsBC;AADxB,GAlB8B;AAqBrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EACR;AAFM;AArB2B,CAAL,CAAN,CAA5B;;AA4BA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,OAAO,GAAGvB,SAAS,EAAzB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEuB,OAAO,CAACrB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEqB,OAAO,CAACf,QAA7B;AAAuC,IAAA,IAAI,EAAEc,KAAK,CAACE,IAAnD;AAAyD,IAAA,UAAU,EAAC,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,QAAQ,CAAC0B,GAAT,CAAaC,IAAI,IAChB,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAA6B,IAAA,SAAS,EAAEJ,OAAO,CAACK,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEF,IAAI,CAACC,GAAf;AAAoB,IAAA,GAAG,EAAED,IAAI,CAACZ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF,CADF;AAWD,CAdD;;AAgBA,eAAeO,OAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'block',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingTop: '2%',\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n    width: '100vw',\n    maxHeight: '25vh',\n    [theme.breakpoints.down('sm')]:{\n      maxHeight: '15vh'\n    },\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n\n\nconst Gallery = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={props.cols} cellHeight='auto'>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img} className={classes.items}>\n            <img src={tile.img} alt={tile.title}/>\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n\nexport default Gallery;"]},"metadata":{},"sourceType":"module"}