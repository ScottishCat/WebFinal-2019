{"ast":null,"code":"import _slicedToArray from \"/Users/siriuskl/Documents/Front-End/search/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/siriuskl/Documents/Front-End/search/src/Components/Details/MapWindow.js\";\nimport React, { useState } from 'react';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps';\n\nconst Map = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selected = _useState2[0],\n        setSelect = _useState2[1];\n\n  return React.createElement(GoogleMap, {\n    defaultZoom: 10,\n    defaultCenter: {\n      lat: 45.421532,\n      lng: -75.697189\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Marker, {\n    key: \"#123456\",\n    position: {\n      lat: 45.421532,\n      lng: -75.697189\n    },\n    onClick: () => {\n      setSelect(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), selected && React.createElement(InfoWindow, {\n    position: {\n      lat: 45.421532,\n      lng: -75.697189\n    },\n    onCloseClick: () => {\n      setSelect(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Some Detail Information\")));\n};\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nconst MapWindow = () => {\n  return React.createElement(\"div\", {\n    style: {\n      width: '350px',\n      height: '350px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(WrappedMap, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDy6UiT7wnGpImKxRge49xNpSdxTVWWQe8\",\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default MapWindow;","map":{"version":3,"sources":["/Users/siriuskl/Documents/Front-End/search/src/Components/Details/MapWindow.js"],"names":["React","useState","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Map","selected","setSelect","lat","lng","WrappedMap","MapWindow","width","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,aAAlC,EAAiDC,MAAjD,EAAyDC,UAAzD,QAA2E,mBAA3E;;AAEA,MAAMC,GAAG,GAAG,MAAI;AAAA,oBACkBN,QAAQ,CAAC,IAAD,CAD1B;AAAA;AAAA,QACLO,QADK;AAAA,QACKC,SADL;;AAGZ,SACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAE,EADjB;AAEI,IAAA,aAAa,EAAE;AAAEC,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,CAAC;AAAxB,KAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,MAAD;AACA,IAAA,GAAG,EAAC,SADJ;AAEA,IAAA,QAAQ,EAAE;AAAED,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,CAAC;AAAxB,KAFV;AAGA,IAAA,OAAO,EAAE,MAAM;AAACF,MAAAA,SAAS,CAAC,IAAD,CAAT;AAAgB,KAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAQKD,QAAQ,IACL,oBAAC,UAAD;AACA,IAAA,QAAQ,EAAE;AAAEE,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,CAAC;AAAxB,KADV;AAEA,IAAA,YAAY,EAAG,MAAK;AAACF,MAAAA,SAAS,CAAC,KAAD,CAAT;AAAiB,KAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHJ,CATR,CADJ;AAoBH,CAvBD;;AAyBA,MAAMG,UAAU,GAAGT,YAAY,CAACC,aAAa,CAACG,GAAD,CAAd,CAA/B;;AAEA,MAAMM,SAAS,GAAG,MAAM;AACpB,SACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,YAAY,EAAE,+HADlB;AAEI,IAAA,cAAc,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFpB;AAGI,IAAA,gBAAgB,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHtB;AAII,IAAA,UAAU,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH,CAXD;;AAaA,eAAeF,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps';\n\nconst Map = ()=>{\n    const [selected, setSelect] = useState(null);\n    \n    return (\n        <GoogleMap\n            defaultZoom={10}\n            defaultCenter={{ lat: 45.421532, lng: -75.697189 }}>\n            <Marker \n            key='#123456'\n            position={{ lat: 45.421532, lng: -75.697189 }}\n            onClick={() => {setSelect(true)}}\n            />\n            {selected && (\n                <InfoWindow \n                position={{ lat: 45.421532, lng: -75.697189 }}\n                onCloseClick ={() =>{setSelect(false)}}>\n                    <div>\n                        Some Detail Information\n                    </div>\n                </InfoWindow>\n            )}\n        </GoogleMap>\n    )\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nconst MapWindow = () => {\n    return (\n        <div style={{ width: '350px', height: '350px' }}>\n            <WrappedMap\n                googleMapURL={\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDy6UiT7wnGpImKxRge49xNpSdxTVWWQe8\"}\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `100%` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n            />\n        </div>\n    )\n}\n\nexport default MapWindow;"]},"metadata":{},"sourceType":"module"}