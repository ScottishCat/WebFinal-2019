{"ast":null,"code":"var _jsxFileName = \"/Users/siriuskl/Documents/Front-End/search/src/Pages/UserSignUpPage.js\";\nimport React, { useRef } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Axios from 'axios';\nconst axios = Axios.create();\naxios.defaults.withCredentials = true;\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n    border: 'solid #cccccc 1px'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#fa877f'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  foot: {\n    textAlign: 'center'\n  },\n  link: {\n    fontSize: '15px'\n  }\n}));\n\nconst UserSignUpPage = () => {\n  const classes = useStyles();\n  const firstNameRef = useRef(null);\n  const lastNameRef = useRef(null);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  const onSubmitHandler = e => {\n    e.preventDefault(); // console.log(firstNameRef.current.value)\n    // console.log(lastNameRef.current.value)\n    // console.log(emailRef.current.value)\n    // console.log(passwordRef.current.value)\n\n    axios.post('http://10.215.222.72:4000/api/login', {\n      firstname: firstNameRef.current.value,\n      lastName: lastNameRef.current.value,\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    }).then(res => {\n      if (res.data.ret_code == 1) {\n        alert(\"Success!\");\n        window.location.href = \"/login\";\n      } else {\n        alert(\"Signup Failed!\");\n      }\n    });\n  };\n\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(AccountCircle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Sign up\"), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoComplete: \"fname\",\n    name: \"firstName\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"firstName\",\n    label: \"First Name\",\n    autoFocus: true,\n    inputRef: firstNameRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"lastName\",\n    label: \"Last Name\",\n    name: \"lastName\",\n    autoComplete: \"lname\",\n    inputRef: lastNameRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    inputRef: emailRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    inputRef: passwordRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Sign in with Google\"), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: classes.foot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: \"/login\",\n    variant: \"body2\",\n    className: classes.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Already have an account? Sign in\"))))));\n};\n\nexport default UserSignUpPage;","map":{"version":3,"sources":["/Users/siriuskl/Documents/Front-End/search/src/Pages/UserSignUpPage.js"],"names":["React","useRef","Avatar","AccountCircle","Button","TextField","Link","Grid","Typography","makeStyles","Container","Axios","axios","create","defaults","withCredentials","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","padding","border","avatar","margin","backgroundColor","form","width","submit","foot","textAlign","link","fontSize","UserSignUpPage","classes","firstNameRef","lastNameRef","emailRef","passwordRef","onSubmitHandler","e","preventDefault","post","firstname","current","value","lastName","email","password","then","res","data","ret_code","alert","window","location","href"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Axios from 'axios';\n\nconst axios = Axios.create();\naxios.defaults.withCredentials = true;\n\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: theme.spacing(2),\n        border: 'solid #cccccc 1px',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: '#fa877f',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    foot: {\n        textAlign: 'center'\n    },\n    link: {\n        fontSize: '15px'\n    }\n}));\n\nconst UserSignUpPage = () => {\n    const classes = useStyles();\n    const firstNameRef = useRef(null);\n    const lastNameRef = useRef(null);\n    const emailRef = useRef(null);\n    const passwordRef = useRef(null);\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault()\n        // console.log(firstNameRef.current.value)\n        // console.log(lastNameRef.current.value)\n        // console.log(emailRef.current.value)\n        // console.log(passwordRef.current.value)\n        axios.post('http://10.215.222.72:4000/api/login',{\n            firstname: firstNameRef.current.value,\n            lastName: lastNameRef.current.value,\n            email: emailRef.current.value,\n            password: passwordRef.current.value\n        })\n        .then(res => {\n            if (res.data.ret_code == 1){\n                alert(\"Success!\");\n                window.location.href=\"/login\"\n            }\n            else{\n                alert(\"Signup Failed!\")\n            }\n        })\n\n    }   \n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <AccountCircle />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                                inputRef={firstNameRef}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                                inputRef={lastNameRef}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                inputRef={emailRef}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                inputRef={passwordRef}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={onSubmitHandler}\n                    >\n                        Sign Up\n                    </Button>\n                    <hr/>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.submit}\n                    >\n                        Sign in with Google\n                    </Button>\n                    <Grid container justify=\"center\">\n                        <Grid item className={classes.foot}>\n                            <Link href=\"/login\" variant=\"body2\" className={classes.link}>\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default UserSignUpPage;"]},"metadata":{},"sourceType":"module"}